--Below are two queries. The first will list out all of the foreign keys in a database and the second will list out primary keys, unique keys, and unique constraints. You can run these on any of the databases you will be testing on.

SELECT
       QUOTENAME(cs.name) Schema_Name
       , QUOTENAME(ct.name) Table_Name 
       , QUOTENAME(fk.name) Constraint_Name
   , STUFF((SELECT ',' + QUOTENAME(c.name)
                         -- get all the columns in the constraint table
                             FROM sys.columns AS c 
                             INNER JOIN sys.foreign_key_columns AS fkc 
                             ON fkc.parent_column_id = c.column_id
                             AND fkc.parent_object_id = c.[object_id]
                             WHERE fkc.constraint_object_id = fk.[object_id]
                             ORDER BY fkc.constraint_column_id 
                             FOR XML PATH(N''), TYPE).value(N'.[1]', N'nvarchar(max)'), 1, 1, N'') Column_List
       , QUOTENAME(rs.name) Ref_Schema_Name
       , QUOTENAME(rt.name) Ref_Table_Name
       , STUFF((SELECT ',' + QUOTENAME(c.name)
                 -- get all the referenced columns
                      FROM sys.columns AS c 
                      INNER JOIN sys.foreign_key_columns AS fkc 
                      ON fkc.referenced_column_id = c.column_id
                      AND fkc.referenced_object_id = c.[object_id]
                      WHERE fkc.constraint_object_id = fk.[object_id]
                      ORDER BY fkc.constraint_column_id 
                      FOR XML PATH(N''), TYPE).value(N'.[1]', N'nvarchar(max)'), 1, 1, N'') Ref_Column_list
FROM sys.foreign_keys AS fk
INNER JOIN sys.tables AS rt -- referenced table
  ON fk.referenced_object_id = rt.[object_id]
INNER JOIN sys.schemas AS rs 
  ON rt.[schema_id] = rs.[schema_id]
INNER JOIN sys.tables AS ct -- constraint table
  ON fk.parent_object_id = ct.[object_id]
INNER JOIN sys.schemas AS cs 
  ON ct.[schema_id] = cs.[schema_id]
WHERE rt.is_ms_shipped = 0 AND ct.is_ms_shipped = 0

select schema_name(t.schema_id) + '.' + t.[name] as table_view, 
    case when t.[type] = 'U' then 'Table'
        when t.[type] = 'V' then 'View'
        end as [object_type],
    case when c.[type] = 'PK' then 'Primary key'
        when c.[type] = 'UQ' then 'Unique constraint'
        when i.[type] = 1 then 'Unique clustered index'
        when i.type = 2 then 'Unique index'
        end as constraint_type, 
    c.[name] as constraint_name,
    substring(column_names, 1, len(column_names)-1) as [columns],
    i.[name] as index_name,
    case when i.[type] = 1 then 'Clustered index'
        when i.type = 2 then 'Index'
        end as index_type
from sys.objects t
    left outer join sys.indexes i
        on t.object_id = i.object_id
    left outer join sys.key_constraints c
        on i.object_id = c.parent_object_id 
        and i.index_id = c.unique_index_id
   cross apply (select col.[name] + ', '
                    from sys.index_columns ic
                        inner join sys.columns col
                            on ic.object_id = col.object_id
                            and ic.column_id = col.column_id
                    where ic.object_id = t.object_id
                        and ic.index_id = i.index_id
                            order by col.column_id
                            for xml path ('') ) D (column_names)
where is_unique = 1
and t.is_ms_shipped <> 1
order by schema_name(t.schema_id) + '.' + t.[name]
